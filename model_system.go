/*
RHSM-API

API for Red Hat Subscription Management

API version: 1.300.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// System struct for System
type System struct {
	EntitlementCount  *int32       `json:"entitlementCount,omitempty"`
	EntitlementStatus *string      `json:"entitlementStatus,omitempty"`
	ErrataCounts      *ErrataCount `json:"errataCounts,omitempty"`
	Hostname          *string      `json:"hostname,omitempty"`
	Href              *string      `json:"href,omitempty"`
	// Date represents the date format used for API returns
	LastCheckin *string `json:"lastCheckin,omitempty"`
	Name        *string `json:"name,omitempty"`
	Type        *string `json:"type,omitempty"`
	Username    *string `json:"username,omitempty"`
	Uuid        *string `json:"uuid,omitempty"`
}

// NewSystem instantiates a new System object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystem() *System {
	this := System{}
	return &this
}

// NewSystemWithDefaults instantiates a new System object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemWithDefaults() *System {
	this := System{}
	return &this
}

// GetEntitlementCount returns the EntitlementCount field value if set, zero value otherwise.
func (o *System) GetEntitlementCount() int32 {
	if o == nil || o.EntitlementCount == nil {
		var ret int32
		return ret
	}
	return *o.EntitlementCount
}

// GetEntitlementCountOk returns a tuple with the EntitlementCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetEntitlementCountOk() (*int32, bool) {
	if o == nil || o.EntitlementCount == nil {
		return nil, false
	}
	return o.EntitlementCount, true
}

// HasEntitlementCount returns a boolean if a field has been set.
func (o *System) HasEntitlementCount() bool {
	if o != nil && o.EntitlementCount != nil {
		return true
	}

	return false
}

// SetEntitlementCount gets a reference to the given int32 and assigns it to the EntitlementCount field.
func (o *System) SetEntitlementCount(v int32) {
	o.EntitlementCount = &v
}

// GetEntitlementStatus returns the EntitlementStatus field value if set, zero value otherwise.
func (o *System) GetEntitlementStatus() string {
	if o == nil || o.EntitlementStatus == nil {
		var ret string
		return ret
	}
	return *o.EntitlementStatus
}

// GetEntitlementStatusOk returns a tuple with the EntitlementStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetEntitlementStatusOk() (*string, bool) {
	if o == nil || o.EntitlementStatus == nil {
		return nil, false
	}
	return o.EntitlementStatus, true
}

// HasEntitlementStatus returns a boolean if a field has been set.
func (o *System) HasEntitlementStatus() bool {
	if o != nil && o.EntitlementStatus != nil {
		return true
	}

	return false
}

// SetEntitlementStatus gets a reference to the given string and assigns it to the EntitlementStatus field.
func (o *System) SetEntitlementStatus(v string) {
	o.EntitlementStatus = &v
}

// GetErrataCounts returns the ErrataCounts field value if set, zero value otherwise.
func (o *System) GetErrataCounts() ErrataCount {
	if o == nil || o.ErrataCounts == nil {
		var ret ErrataCount
		return ret
	}
	return *o.ErrataCounts
}

// GetErrataCountsOk returns a tuple with the ErrataCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetErrataCountsOk() (*ErrataCount, bool) {
	if o == nil || o.ErrataCounts == nil {
		return nil, false
	}
	return o.ErrataCounts, true
}

// HasErrataCounts returns a boolean if a field has been set.
func (o *System) HasErrataCounts() bool {
	if o != nil && o.ErrataCounts != nil {
		return true
	}

	return false
}

// SetErrataCounts gets a reference to the given ErrataCount and assigns it to the ErrataCounts field.
func (o *System) SetErrataCounts(v ErrataCount) {
	o.ErrataCounts = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *System) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *System) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *System) SetHostname(v string) {
	o.Hostname = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *System) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *System) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *System) SetHref(v string) {
	o.Href = &v
}

// GetLastCheckin returns the LastCheckin field value if set, zero value otherwise.
func (o *System) GetLastCheckin() string {
	if o == nil || o.LastCheckin == nil {
		var ret string
		return ret
	}
	return *o.LastCheckin
}

// GetLastCheckinOk returns a tuple with the LastCheckin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetLastCheckinOk() (*string, bool) {
	if o == nil || o.LastCheckin == nil {
		return nil, false
	}
	return o.LastCheckin, true
}

// HasLastCheckin returns a boolean if a field has been set.
func (o *System) HasLastCheckin() bool {
	if o != nil && o.LastCheckin != nil {
		return true
	}

	return false
}

// SetLastCheckin gets a reference to the given string and assigns it to the LastCheckin field.
func (o *System) SetLastCheckin(v string) {
	o.LastCheckin = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *System) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *System) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *System) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *System) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *System) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *System) SetType(v string) {
	o.Type = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *System) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *System) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *System) SetUsername(v string) {
	o.Username = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *System) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *System) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *System) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *System) SetUuid(v string) {
	o.Uuid = &v
}

func (o System) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EntitlementCount != nil {
		toSerialize["entitlementCount"] = o.EntitlementCount
	}
	if o.EntitlementStatus != nil {
		toSerialize["entitlementStatus"] = o.EntitlementStatus
	}
	if o.ErrataCounts != nil {
		toSerialize["errataCounts"] = o.ErrataCounts
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if o.LastCheckin != nil {
		toSerialize["lastCheckin"] = o.LastCheckin
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	return json.Marshal(toSerialize)
}

type NullableSystem struct {
	value *System
	isSet bool
}

func (v NullableSystem) Get() *System {
	return v.value
}

func (v *NullableSystem) Set(val *System) {
	v.value = val
	v.isSet = true
}

func (v NullableSystem) IsSet() bool {
	return v.isSet
}

func (v *NullableSystem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystem(val *System) *NullableSystem {
	return &NullableSystem{value: val, isSet: true}
}

func (v NullableSystem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
