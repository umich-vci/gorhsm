/*
 * RHSM-API
 *
 * API for Red Hat Subscription Management
 *
 * API version: 1.177.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// GoldImageStatus Gold Image Status Details of a cloud access provider account for an image provider.
type GoldImageStatus struct {
	// Description of the provider image group
	Description *string `json:"description,omitempty"`
	// Name of the requested provider image group
	Name *string `json:"name,omitempty"`
	// Status of Gold Image Request
	Status *string `json:"status,omitempty"`
}

// NewGoldImageStatus instantiates a new GoldImageStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoldImageStatus() *GoldImageStatus {
	this := GoldImageStatus{}
	return &this
}

// NewGoldImageStatusWithDefaults instantiates a new GoldImageStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoldImageStatusWithDefaults() *GoldImageStatus {
	this := GoldImageStatus{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GoldImageStatus) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoldImageStatus) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GoldImageStatus) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GoldImageStatus) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GoldImageStatus) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoldImageStatus) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GoldImageStatus) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GoldImageStatus) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GoldImageStatus) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoldImageStatus) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GoldImageStatus) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GoldImageStatus) SetStatus(v string) {
	o.Status = &v
}

func (o GoldImageStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableGoldImageStatus struct {
	value *GoldImageStatus
	isSet bool
}

func (v NullableGoldImageStatus) Get() *GoldImageStatus {
	return v.value
}

func (v *NullableGoldImageStatus) Set(val *GoldImageStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableGoldImageStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableGoldImageStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoldImageStatus(val *GoldImageStatus) *NullableGoldImageStatus {
	return &NullableGoldImageStatus{value: val, isSet: true}
}

func (v NullableGoldImageStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoldImageStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
