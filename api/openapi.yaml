openapi: 3.0.1
info:
  description: API for Red Hat Subscription Management
  title: RHSM-API
  version: 1.143.0
servers:
- url: https://api.access.redhat.com/management/v1
security:
- Bearer: []
paths:
  /allocations:
    get:
      description: The default and max number of results in a response are 100.
      operationId: listAllocations
      parameters:
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: list of allocations
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all allocations for a user
      tags:
      - allocation
    post:
      description: |2-

        Version 6.5 (most recent version of Satellite)

        The default success response will be 200.
      operationId: createSatellite
      parameters:
      - description: must be less than 100 characters and use only numbers, letters,
          underscores, hyphens, and periods
        in: query
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: CreateSatellite200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Create Satellite by name
      tags:
      - allocation
  /allocations/{AllocationUUID}:
    delete:
      description: |-
        The default success response will be 204

        System, RHUI, Hypervisor are unsupported allocation types
      operationId: removeAllocation
      parameters:
      - in: path
        name: AllocationUUID
        required: true
        schema:
          type: string
      - description: |-
          Deleting a subscription allocation can have significant impacts on your hosts and activation keys.
          We require a force parameter to make sure the delete operation is intentional.
        in: query
        name: force
        required: true
        schema:
          enum:
          - true
          type: boolean
      responses:
        "204":
          content: {}
          description: Successfully removed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: GatewayTimeout error
      summary: Remove allocation profile
      tags:
      - allocation
    get:
      description: System, RHUI, Hypervisor are unsupported allocation types
      operationId: showAllocation
      parameters:
      - in: path
        name: AllocationUUID
        required: true
        schema:
          type: string
      - description: Show more details about a allocation
        in: query
        name: include
        schema:
          enum:
          - entitlements
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: ShowAllocation200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Get an allocation by UUID
      tags:
      - allocation
  /allocations/{AllocationUUID}/entitlements:
    post:
      description: |-
        The default success response will be 200.

        System, RHUI, Hypervisor are unsupported allocation types
      operationId: attachEntitlementAllocation
      parameters:
      - in: query
        name: pool
        required: true
        schema:
          type: string
      - description: quantity you want to attach
        in: query
        name: quantity
        schema:
          type: integer
      - in: path
        name: AllocationUUID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: AttachEntitlement200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Attach entitlement to allocation
      tags:
      - allocation
  /allocations/{AllocationUUID}/entitlements/{EntitlementUUID}:
    put:
      description: |-
        The default success response will be 200.

        System, RHUI, Hypervisor are unsupported allocation types
      operationId: updateEntitlementAllocation
      parameters:
      - in: path
        name: AllocationUUID
        required: true
        schema:
          type: string
      - in: path
        name: EntitlementUUID
        required: true
        schema:
          type: string
      - description: |-
          maxItem: quantity must be less than or equal to the maximum number of allowed entitlements in the entitlement pool
          minItem: 1
        in: query
        name: quantity
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: UpdateEntitlement200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Update attached entitlement to allocation
      tags:
      - allocation
  /allocations/{AllocationUUID}/export:
    get:
      description: |-
        Starts job to generate export for an allocation. To check the status of the export job visit the href in the response.

        System, RHUI, Hypervisor are unsupported allocation types. SAM 1.2 or lower, and Satellite 5 versions are unsupported.
      operationId: exportAllocation
      parameters:
      - in: path
        name: AllocationUUID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: ExportAllocation200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Trigger allocation manifest export
      tags:
      - allocation
  /allocations/{AllocationUUID}/export/{ExportID}:
    get:
      description: |-
        Success response contains a zip file. The link is one-time download and expires after one try. Trigger export job to get another download link.

        Content-Type: application/zip
      operationId: getExportAllocation
      parameters:
      - in: path
        name: AllocationUUID
        required: true
        schema:
          type: string
      - in: path
        name: ExportID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/zip:
              schema:
                items:
                  type: integer
                type: array
          description: GetExportAllocation200 is the success response
        "400":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Download allocation manifest
      tags:
      - allocation
  /allocations/{AllocationUUID}/exportJob/{ExportJobID}:
    get:
      description: Returns export download link in response.
      operationId: exportJobAllocation
      parameters:
      - in: path
        name: AllocationUUID
        required: true
        schema:
          type: string
      - in: path
        name: ExportJobID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: ExportJobAllocation200 is the success response
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_202'
          description: AcceptedExportJob202 is a response for accepted and in progress
            job
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotAcceptable error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Check status of allocation manifest export
      tags:
      - allocation
  /allocations/{AllocationUUID}/pools:
    get:
      description: System, RHUI, Hypervisor are unsupported allocation types
      operationId: listAllocationPools
      parameters:
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      - description: include future dated pools for satellite 6.3 or higher
        in: query
        name: future
        schema:
          enum:
          - true
          type: boolean
      - in: path
        name: AllocationUUID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poolsListMock'
          description: ListAllocationPools200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all pools for an allocation
      tags:
      - allocation
  /allocations/{AllocationUUID}/{EntitlementID}:
    delete:
      description: The default success response will be 204.
      operationId: removeAllocationEntitlement
      parameters:
      - in: path
        name: AllocationUUID
        required: true
        schema:
          type: string
      - description: Remove an entitlement from an allocation
        in: path
        name: EntitlementID
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successfully removed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Remove entitlement from the allocation
      tags:
      - allocation
  /cloud_access_providers/enabled:
    get:
      description: |
        Returns the full list of all enabled Red Hat products and Cloud Access provider accounts/subscriptions associated with the user’s Red Hat account.
        - For Products that are expired `nextRenewal` field would be omitted and `totalQuantity` would be `0`.
        - Product objects can have `totalQuantity` field as `-1` indicating `Unlimited` quantity available.
        - The `nextRenewalDate` field of a Product has the format `YYYY-MM-DD`.
        - The `goldImageStatus` field is available for an account when the Provider is a certified Gold Image Provider and the account has been requested for gold image access. It's value could be `"Requested"`, `"Granted"` or `"Failed"`.
        - The `imageGroups` field is available for a product when the Provider is a certified Gold Image Provider, and the product has a gold image group available for it.
      operationId: listEnabledCloudAccessProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: A JSON response object listing cloud access providers and their
            accounts and products.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all enabled cloud access providers for a user
      tags:
      - cloudaccess
  /cloud_access_providers/{ProviderShortName}/account:
    put:
      description: |
        Updates the account ID and/or nickname for a currently-enabled provider account. You can find a list of currently-enabled provider accounts and provider short names from the `/v1/cloud_access_providers/enabled` endpoint.
      operationId: UpdateProviderAccount
      parameters:
      - in: path
        name: ProviderShortName
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
                newID:
                  type: string
                newNickname:
                  type: string
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Update provider account
      tags:
      - cloudaccess
      x-codegen-request-body-name: account
  /cloud_access_providers/{ProviderShortName}/accounts:
    delete:
      description: |
        Removes a currently-enabled provider account, including removing access to Gold Images, where applicable. You can find a list of currently-enabled provider accounts and provider short names from the `/v1/cloud_access_providers/enabled` endpoint.
      operationId: RemoveProviderAccount
      parameters:
      - in: path
        name: ProviderShortName
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
              type: object
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Remove a provider account
      tags:
      - cloudaccess
      x-codegen-request-body-name: account
    post:
      description: |
        Add up to `100` new provider accounts, with optional nicknames, to a currently-enabled provider for Red Hat Cloud Access. You can find a list of currently-enabled provider accounts and provider short names from the `/v1/cloud_access_providers/enabled` endpoint.
      operationId: AddProviderAccounts
      parameters:
      - in: path
        name: ProviderShortName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AddProviderAccount'
              type: array
        required: false
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Add accounts for a provider
      tags:
      - cloudaccess
      x-codegen-request-body-name: account
  /cloud_access_providers/{ProviderShortName}/goldimage:
    post:
      description: |
        Requests access to Red Hat Gold Images, where available, for currently-enabled products and provider accounts. Customers can request Red Hat Gold Images for account IDs and product image groups listed in the `/v1/cloud_access_providers/enabled` endpoint using the provider short name listed in the same response. After the request has been accepted for processing, gold image status for accounts can be checked in the `/v1/cloud_access_providers/enabled` endpoint response.
      operationId: EnableGoldImages
      parameters:
      - in: path
        name: ProviderShortName
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            schema:
              properties:
                accounts:
                  items:
                    type: string
                  type: array
                images:
                  items:
                    type: string
                  type: array
              required:
              - accounts
              - images
              type: object
        required: false
      responses:
        "202":
          content: {}
          description: 'Accepted: The request has been accepted for processing, but
            the processing has not been completed.'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Enable Gold image access
      tags:
      - cloudaccess
      x-codegen-request-body-name: goldImages
  /errata:
    get:
      description: The default and max results in a response are 1000.
      operationId: listErrata
      parameters:
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/myErrataListMock'
          description: ListErrata200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all errata for a user's systems
      tags:
      - errata
  /errata/cset/{ContentSet}/arch/{Arch}:
    get:
      description: Limit is the number of results in a response. The default limit
        is 50 and max limit is 100.
      operationId: listErrataByContentSetArch
      parameters:
      - in: path
        name: ContentSet
        required: true
        schema:
          type: string
      - in: path
        name: Arch
        required: true
        schema:
          type: string
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/contentSetArchMock'
          description: ListErrataByContentSetArch200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Get all the errata for the specified content set and arch
      tags:
      - errata
  /errata/{AdvisoryID}:
    get:
      description: This will get the details of an advisory specified by its advisoryID.
      operationId: showErratum
      parameters:
      - description: unique identifier for a Red Hat advisory
        in: path
        name: AdvisoryID
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: ShowErratum200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Get the details of an advisory
      tags:
      - errata
  /errata/{AdvisoryID}/packages:
    get:
      description: The default and max results in a response are 50.
      operationId: listErratumPackages
      parameters:
      - description: unique identifier for a Red Hat advisory
        in: path
        name: AdvisoryID
        required: true
        schema:
          type: string
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pkgListMock'
          description: ListErratumPackages200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all packages for an advisory
      tags:
      - errata
  /errata/{AdvisoryID}/systems:
    get:
      description: The default and max results in a response are 1000.
      operationId: listErratumSystems
      parameters:
      - description: unique identifier for a Red Hat advisory
        in: path
        name: AdvisoryID
        required: true
        schema:
          type: string
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/systemListMock'
          description: ListErratumSystems200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all systems for an advisory
      tags:
      - errata
  /images/cset/{ContentSet}:
    get:
      description: |
        List all the available images in a given content set. The content set parameter is expected to be
         properly formatted (for example rhel-8-for-x86_64-baseos-isos). And the user requesting the endpoint
        is expected to have Download permission (UGC). If the user is entitled to an image, a "downloadHref" attribute is added in the image response object which links to image download API. The list is paginated by default to 25 results in a response and goes to maximum 100 results in a response. Use pagination by setting offset and limit url parameters (valid integer values).
      operationId: listImagesByContentSet
      parameters:
      - in: path
        name: ContentSet
        required: true
        schema:
          type: string
      - description: maximum number of list items in a page
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: A JSON response object containing image listing.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List available images in a content set
      tags:
      - images
  /images/{checksum}/download:
    get:
      description: |
        Find an image by its SHA256 checksum and generate a download link with a short-lived expiration. It is expected for users to obtain a new download link every time an image is downloaded and to not store the link for more than several minutes. If the user has "Download Software and Updates" permissions and a valid subscription for the image, they will receive a HTTP 307 redirect to the location on the Red Hat CDN. Clients can either follow the HTTP redirect or find the download URL in the response body.
      operationId: downloadImage
      parameters:
      - in: path
        name: checksum
        required: true
        schema:
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        "307":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_307'
          description: redirect to download image on the Red Hat CDN
          headers:
            Location:
              description: URL to obtain the image
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Download an image by its SHA256 checksum
      tags:
      - images
  /packages/cset/{ContentSet}/arch/{Arch}:
    get:
      description: The default and max results in a response are 50 and 100 respectively.
      operationId: listPackagesByContentSetArch
      parameters:
      - in: path
        name: ContentSet
        required: true
        schema:
          type: string
      - in: path
        name: Arch
        required: true
        schema:
          type: string
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      - explode: false
        in: query
        name: filter
        schema:
          items:
            enum:
            - latest
            type: string
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: ListPackagesByContentSetArch200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Get all the packages for the specified content set and arch.
      tags:
      - packages
  /packages/{Checksum}:
    get:
      description: This will get the details of a package specified by its checksum.
      operationId: showPackage
      parameters:
      - in: path
        name: Checksum
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: ShowPackage200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Get the details of a package
      tags:
      - packages
  /packages/{checksum}/download:
    get:
      description: |
        Find a package by its SHA256 checksum and generate a download link with a short-lived expiration. It is expected for users to obtain a new download link every time a package is downloaded and to not store the link for more than several minutes. If the user has "Download Software and Updates" permissions and a valid subscription for the package, they will receive an HTTP 307 redirect to the location on the Red Hat CDN. Clients can either follow the HTTP redirect or find the download URL in the response body.
      operationId: downloadPackage
      parameters:
      - in: path
        name: checksum
        required: true
        schema:
          pattern: ^[a-f0-9]{64}$
          type: string
      responses:
        "307":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_307'
          description: redirect to download package on the Red Hat CDN
          headers:
            Location:
              description: URL to obtain the package
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Download a package by its SHA256 checksum
      tags:
      - packages
  /subscriptions:
    get:
      description: The default and max results in a response are 50.
      operationId: listSubscriptions
      parameters:
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: ListSubscriptions200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all subscriptions for a user
      tags:
      - subscription
  /subscriptions/{SubscriptionNumber}/contentSets:
    get:
      description: The default and max results in a response are 1000.
      operationId: listSubContentSets
      parameters:
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      - in: path
        name: SubscriptionNumber
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
          description: ListSubContentSets200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all content sets for a subscription
      tags:
      - subscription
  /subscriptions/{SubscriptionNumber}/systems:
    get:
      description: The default and max results in a response are 100.
      operationId: listSubSystems
      parameters:
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      - in: path
        name: SubscriptionNumber
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
          description: ListSubSystems200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all systems consuming a subscription
      tags:
      - subscription
  /systems:
    get:
      description: The default and max number of results in a response are 100.
      operationId: listSystems
      parameters:
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      - description: Filter Systems by System Name
        in: query
        name: filter
        schema:
          type: string
      - description: Filter Systems by a valid User Name, where User Name is the system
          owner and wildcard characters are not allowed
        in: query
        name: username
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
          description: ListSystems200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all systems for a user
      tags:
      - system
  /systems/{SystemUUID}:
    delete:
      description: The default success response will be 204
      operationId: removeSystem
      parameters:
      - in: path
        name: SystemUUID
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successfully removed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: GatewayTimeout error
      summary: Remove system profile
      tags:
      - system
    get:
      description: Sam & Satellite systems are unsupported system types.
      operationId: showSystem
      parameters:
      - in: path
        name: SystemUUID
        required: true
        schema:
          type: string
      - description: Show more details about a system
        explode: false
        in: query
        name: include
        schema:
          items:
            enum:
            - facts
            - entitlements
            - installedProducts
            type: string
          maxItems: 3
          minItems: 1
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: ShowSystem200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Get a system specified by UUID.
      tags:
      - system
  /systems/{SystemUUID}/entitlements:
    post:
      description: |-
        The default success response will be 200.

        Sam & Satellite systems are unsupported system types.
      operationId: attachEntitlement
      parameters:
      - in: path
        name: SystemUUID
        required: true
        schema:
          type: string
      - in: query
        name: pool
        required: true
        schema:
          type: string
      - description: quantity you want to attach
        in: query
        name: quantity
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
          description: AttachedEntitlement200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Attach entitlement to system
      tags:
      - system
  /systems/{SystemUUID}/errata:
    get:
      description: The default and max number of results in a response are 100.
      operationId: listSystemErrata
      parameters:
      - in: path
        name: SystemUUID
        required: true
        schema:
          type: string
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_14'
          description: list of advisories
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all applicable errata for a system
      tags:
      - system
  /systems/{SystemUUID}/packages:
    get:
      description: The default and max number of results in a response are 1000.
      operationId: listSystemPackages
      parameters:
      - in: path
        name: SystemUUID
        required: true
        schema:
          type: string
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      - description: Show errata details for packages
        in: query
        name: errata_detail
        schema:
          enum:
          - true
          - false
          type: boolean
      - description: Show upgradable packages only. Also accepts 'upgradable' as valid
          query.
        in: query
        name: upgradeable
        schema:
          enum:
          - true
          - false
          type: boolean
      - description: Filter packages
        in: query
        name: filter
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_15'
          description: list of packages
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all packages for a system
      tags:
      - system
  /systems/{SystemUUID}/pools:
    get:
      description: The default and max number of results in a response are 50.
      operationId: listSystemPools
      parameters:
      - in: path
        name: SystemUUID
        required: true
        schema:
          type: string
      - description: max number of results you want
        in: query
        name: limit
        schema:
          type: integer
      - description: index from which you want next items
        in: query
        name: offset
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/poolsListMock'
          description: ListSystemPools200 is the success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: List all pools for a system
      tags:
      - system
  /systems/{SystemUUID}/{EntitlementID}:
    delete:
      description: The default success response will be 204.
      operationId: removeSystemEntitlement
      parameters:
      - in: path
        name: SystemUUID
        required: true
        schema:
          type: string
      - description: Remove an entitlement from a system
        in: path
        name: EntitlementID
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Successfully removed
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: BadRequest error
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Unauthorized error
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: Forbidden error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: NotFound error
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_400'
          description: InternalServerError error
      summary: Remove entitlement from the system
      tags:
      - system
components:
  requestBodies:
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
      required: false
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: false
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
      required: false
  responses:
    Accepted:
      content: {}
      description: 'Accepted: The request has been accepted for processing, but the
        processing has not been completed.'
    BadRequest:
      content:
        application/json:
          schema:
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
            type: object
      description: BadRequest error
    Forbidden:
      content:
        application/json:
          schema:
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
            type: object
      description: Forbidden error
    GatewayTimeout:
      content:
        application/json:
          schema:
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
            type: object
      description: GatewayTimeout error
    InternalServerError:
      content:
        application/json:
          schema:
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
            type: object
      description: InternalServerError error
    NoContent:
      content: {}
      description: No Content
    NotAcceptable:
      content:
        application/json:
          schema:
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
            type: object
      description: NotAcceptable error
    NotFound:
      content:
        application/json:
          schema:
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
            type: object
      description: NotFound error
    Unauthorized:
      content:
        application/json:
          schema:
            properties:
              error:
                $ref: '#/components/schemas/ErrorDetails'
            type: object
      description: Unauthorized error
  schemas:
    APIPageParam:
      description: APIPageParam details the pagination parameters in APIResponse
      example:
        offset: 5
        count: 6
        limit: 1
      properties:
        count:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
      type: object
    AddProviderAccount:
      description: An account to be added
      example:
        nickname: nickname
        id: id
      properties:
        id:
          type: string
        nickname:
          type: string
      type: object
    Allocation:
      example:
        name: name
        entitlementQuantity: 0
        type: type
        uuid: uuid
        version: version
        url: url
      properties:
        entitlementQuantity:
          type: integer
        name:
          type: string
        type:
          type: string
        url:
          type: string
        uuid:
          type: string
        version:
          type: string
      title: Allocation is an entity that consumes entitlements. Also referred as
        a Distributor.
      type: object
    AllocationDetails:
      description: details of a subscription allocation
      example:
        createdDate: 2006-01-02T15:04:05.000Z
        entitlementsAttachedQuantity: 6
        createdBy: createdBy
        name: name
        entitlementsAttached:
          valid: true
          reason: reason
          value:
          - contractNumber: contractNumber
            id: id
            entitlementQuantity: 0
            sku: sku
          - contractNumber: contractNumber
            id: id
            entitlementQuantity: 0
            sku: sku
        contentAccessMode: contentAccessMode
        lastModified: 2006-01-02T15:04:05.000Z
        type: type
        uuid: uuid
        version: version
      properties:
        contentAccessMode:
          type: string
        createdBy:
          type: string
        createdDate:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        entitlementsAttached:
          $ref: '#/components/schemas/EntitlementsAttachedResponse'
        entitlementsAttachedQuantity:
          type: integer
        lastModified:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        name:
          type: string
        type:
          type: string
        uuid:
          type: string
        version:
          type: string
      type: object
    ContentSet:
      example:
        name: name
        arch: arch
        label: label
        type: type
        enabled: true
      properties:
        arch:
          type: string
        enabled:
          type: boolean
        label:
          type: string
        name:
          type: string
        type:
          type: string
      title: ContentSet represent a contentset for the listContentSets API Response.
      type: object
    Date:
      description: Date represents the date format used for API returns
      example: 2006-01-02T15:04:05.000Z
      type: string
    DetailResponse:
      example:
        quantity: quantity
        subscriptionNumber: subscriptionNumber
        endDate: 2006-01-02T15:04:05.000Z
        subscriptionName: subscriptionName
        contractNumber: contractNumber
        pools:
        - consumed: 0
          quantity: 6
          id: id
          type: type
        - consumed: 0
          quantity: 6
          id: id
          type: type
        sku: sku
        startDate: 2006-01-02T15:04:05.000Z
        status: status
      properties:
        contractNumber:
          type: string
        endDate:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        pools:
          items:
            $ref: '#/components/schemas/Pool'
          type: array
        quantity:
          type: string
        sku:
          type: string
        startDate:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        status:
          type: string
        subscriptionName:
          type: string
        subscriptionNumber:
          type: string
      title: DetailResponse is the user-friendly response from the service.
      type: object
    DownloadLink:
      properties:
        expiration:
          description: time at which the download link expires (in UTC)
          example: 2006-01-02T15:04:05.000Z
          type: string
        filename:
          description: filename of the file on the download link
          example: filename-1.2.3-1.x86_64.rpm
          type: string
        href:
          description: URL to obtain the image
          example: https://access.cdn.redhat.com/content/origin/files/sha256/64/643e706cf7db9e93e706637af92d80eb58377dd0c64ac1e9ce6a72700aa04c2a/rhel-8.1-x86_64-boot.iso?_auth_=1582920605_7e8153e1bdc2f46636653e2efb17bc65
          type: string
      type: object
    EnabledCloudAccessProvider:
      description: Enabled Cloud Access Provider details including products and accounts.
      example:
        name: name
        accounts:
        - goldImageStatus: Granted
          nickname: nickname
          id: id
          dateAdded: 2006-01-02T15:04:05.000Z
        - goldImageStatus: Granted
          nickname: nickname
          id: id
          dateAdded: 2006-01-02T15:04:05.000Z
        shortName: shortName
        products:
        - totalQuantity: 6
          nextRenewal: 2006-01-02
          name: name
          enabledQuantity: 0
          sku: sku
          imageGroups:
          - imageGroups
          - imageGroups
        - totalQuantity: 6
          nextRenewal: 2006-01-02
          name: name
          enabledQuantity: 0
          sku: sku
          imageGroups:
          - imageGroups
          - imageGroups
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/EnabledProviderAccount'
          type: array
        name:
          type: string
        products:
          items:
            $ref: '#/components/schemas/EnabledProduct'
          type: array
        shortName:
          type: string
      type: object
    EnabledProduct:
      description: Enabled Product represents a cloud access provider product
      example:
        totalQuantity: 6
        nextRenewal: 2006-01-02
        name: name
        enabledQuantity: 0
        sku: sku
        imageGroups:
        - imageGroups
        - imageGroups
      properties:
        enabledQuantity:
          type: integer
        imageGroups:
          items:
            type: string
          type: array
        name:
          type: string
        nextRenewal:
          description: ShortDate represents the short date format used for API returns
            where time precision is not needed
          example: 2006-01-02
          type: string
        sku:
          type: string
        totalQuantity:
          type: integer
      type: object
    EnabledProviderAccount:
      description: Enabled Provider Account represents a cloud access provider account
      example:
        goldImageStatus: Granted
        nickname: nickname
        id: id
        dateAdded: 2006-01-02T15:04:05.000Z
      properties:
        dateAdded:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        goldImageStatus:
          example: Granted
          type: string
        id:
          type: string
        nickname:
          type: string
      type: object
    EntitlementsAttachedResponse:
      description: EntitlementsAttachedResponse wraps data obtained for EntitlementsAttached
        and sends metadata about it using helpers.OptionalResult
      example:
        valid: true
        reason: reason
        value:
        - contractNumber: contractNumber
          id: id
          entitlementQuantity: 0
          sku: sku
        - contractNumber: contractNumber
          id: id
          entitlementQuantity: 0
          sku: sku
      properties:
        reason:
          type: string
        valid:
          type: boolean
        value:
          items:
            $ref: '#/components/schemas/EntitlementsAttachedResponseValue'
          type: array
      type: object
    EntitlementsAttachedResponseValue:
      description: EntitlementsAttachedResponseValue represents the Value field in
        the EntitlementsAttachedResponse
      example:
        contractNumber: contractNumber
        id: id
        entitlementQuantity: 0
        sku: sku
      properties:
        contractNumber:
          type: string
        entitlementQuantity:
          type: integer
        id:
          type: string
        sku:
          type: string
      type: object
    ErrataCount:
      description: ErrataCount is the errata information for a System
      example:
        enhancementCount: 1
        securityCount: 5
        bugfixCount: 6
      properties:
        bugfixCount:
          type: integer
        enhancementCount:
          type: integer
        securityCount:
          type: integer
      type: object
    ErratumDetails:
      example:
        severity: severity
        summary: summary
        references:
        - href: href
          id: id
          title: title
          type: type
        - href: href
          id: id
          title: title
          type: type
        typeSeverity: typeSeverity
        affectedProducts:
        - affectedProducts
        - affectedProducts
        description: description
        synopsis: synopsis
        type: type
        cves: cves
        lastUpdated: 2006-01-02T15:04:05.000Z
        bugzillas:
        - href: href
          id: id
          title: title
          type: type
        - href: href
          id: id
          title: title
          type: type
        solution: solution
        copyrightYear: copyrightYear
        id: id
        issued: 2006-01-02T15:04:05.000Z
      properties:
        affectedProducts:
          items:
            type: string
          type: array
        bugzillas:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        copyrightYear:
          type: string
        cves:
          type: string
        description:
          type: string
        id:
          type: string
        issued:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        lastUpdated:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        references:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        severity:
          type: string
        solution:
          type: string
        summary:
          type: string
        synopsis:
          type: string
        type:
          type: string
        typeSeverity:
          type: string
      type: object
    ErratumForSystem:
      description: an erratum listed for a system
      example:
        severity: severity
        href: href
        id: id
        published: 2006-01-02T15:04:05.000Z
        synopsis: synopsis
        type: type
      properties:
        href:
          type: string
        id:
          type: string
        published:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        severity:
          type: string
        synopsis:
          type: string
        type:
          type: string
      type: object
    ErratumInContentSet:
      description: ErratumInContentSet contains information on an erratum listed in
        a content set
      example:
        severity: severity
        advisoryId: advisoryId
        publishDate: 2006-01-02T15:04:05.000Z
        href: href
        synopsis: synopsis
        type: type
      properties:
        advisoryId:
          type: string
        href:
          type: string
        publishDate:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        severity:
          type: string
        synopsis:
          type: string
        type:
          type: string
      type: object
    ErrorDetails:
      description: ErrorDetails details the Error in ErrorResponse
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    ImageInContentSet:
      description: Image Details in a content set image listing.
      example:
        datePublished: 2006-01-02T15:04:05.000Z
        filename: filename
        imageName: imageName
        downloadHref: downloadHref
        checksum: checksum
        arch: arch
      properties:
        arch:
          type: string
        checksum:
          type: string
        datePublished:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        downloadHref:
          type: string
        filename:
          type: string
        imageName:
          type: string
      type: object
    ListResponse:
      description: |-
        ListResponse is the actual collection of subscription details that gets
        rendered
      items:
        $ref: '#/components/schemas/DetailResponse'
      type: array
    MyErratum:
      description: MyErratum contains erratum information that affects at least one
        system
      example:
        advisoryId: advisoryId
        systems: systems
        publishDate: 2006-01-02T15:04:05.000Z
        affectedSystemCount: 0
        details: details
        synopsis: synopsis
        type: type
      properties:
        advisoryId:
          type: string
        affectedSystemCount:
          type: integer
        details:
          type: string
        publishDate:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        synopsis:
          type: string
        systems:
          type: string
        type:
          type: string
      type: object
    PackageDetail:
      description: PackageDetail wraps an errata package and adds a RefURL
      example:
        summary: summary
        filename: filename
        release: release
        repoTags:
        - repoTags
        - repoTags
        contentSets:
        - contentSets
        - contentSets
        checksum: checksum
        name: name
        epoch: 0
        arch: arch
        details_url: details_url
        version: version
      properties:
        arch:
          type: string
        checksum:
          type: string
        contentSets:
          items:
            type: string
          type: array
        details_url:
          type: string
        epoch:
          type: integer
        filename:
          type: string
        name:
          type: string
        release:
          type: string
        repoTags:
          items:
            type: string
          type: array
        summary:
          type: string
        version:
          type: string
      type: object
    PackageForSystem:
      description: package installed on a system
      example:
        advisories:
        - advisory: advisory
          url: url
        - advisory: advisory
          url: url
        errataCount: 6
        release: release
        name: name
        epoch: 0
        arch: arch
        version: version
      properties:
        advisories:
          items:
            $ref: '#/components/schemas/PackageForSystem_advisories'
          type: array
        arch:
          type: string
        epoch:
          type: integer
        errataCount:
          type: integer
        name:
          type: string
        release:
          type: string
        version:
          type: string
      type: object
    Pool:
      description: Pool represents pool information that matter for the detail list
      example:
        consumed: 0
        quantity: 6
        id: id
        type: type
      properties:
        consumed:
          type: integer
        id:
          type: string
        quantity:
          type: integer
        type:
          type: string
      type: object
    PoolDetail:
      description: PoolDetail is an entry in the system/allocation pools listing
      example:
        subscriptionNumber: subscriptionNumber
        endDate: 2006-01-02T15:04:05.000Z
        subscriptionName: subscriptionName
        contractNumber: contractNumber
        entitlementsAvailable: 0
        id: id
        serviceLevel: serviceLevel
        sku: sku
        startDate: 2006-01-02T15:04:05.000Z
      properties:
        contractNumber:
          type: string
        endDate:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        entitlementsAvailable:
          type: integer
        id:
          type: string
        serviceLevel:
          type: string
        sku:
          type: string
        startDate:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        subscriptionName:
          type: string
        subscriptionNumber:
          type: string
      type: object
    Reference:
      description: Reference contains a reference to an external item
      example:
        href: href
        id: id
        title: title
        type: type
      properties:
        href:
          type: string
        id:
          type: string
        title:
          type: string
        type:
          type: string
      type: object
    ShortDate:
      description: ShortDate represents the short date format used for API returns
        where time precision is not needed
      example: 2006-01-02
      type: string
    System:
      example:
        entitlementCount: 0
        errataCounts:
          enhancementCount: 1
          securityCount: 5
          bugfixCount: 6
        hostname: hostname
        entitlementStatus: entitlementStatus
        name: name
        href: href
        lastCheckin: 2006-01-02T15:04:05.000Z
        type: type
        uuid: uuid
        username: username
      properties:
        entitlementCount:
          type: integer
        entitlementStatus:
          type: string
        errataCounts:
          $ref: '#/components/schemas/ErrataCount'
        hostname:
          type: string
        href:
          type: string
        lastCheckin:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        name:
          type: string
        type:
          type: string
        username:
          type: string
        uuid:
          type: string
      title: System is an entity that consumes entitlements. Also referred as a Consumer.
      type: object
    SystemList:
      description: SystemList is the result of the get system list API
      example:
        systemName: systemName
        totalEntitlementQuantity: 6
        complianceStatus: complianceStatus
        details: details
        lastCheckin: 2006-01-02T15:04:05.000Z
        entitlementQuantity: 0
        type: type
        uuid: uuid
      properties:
        complianceStatus:
          type: string
        details:
          type: string
        entitlementQuantity:
          type: integer
        lastCheckin:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        systemName:
          type: string
        totalEntitlementQuantity:
          type: integer
        type:
          type: string
        uuid:
          type: string
      type: object
    contentSetArchMock:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - severity: severity
          advisoryId: advisoryId
          publishDate: 2006-01-02T15:04:05.000Z
          href: href
          synopsis: synopsis
          type: type
        - severity: severity
          advisoryId: advisoryId
          publishDate: 2006-01-02T15:04:05.000Z
          href: href
          synopsis: synopsis
          type: type
      properties:
        body:
          items:
            $ref: '#/components/schemas/ErratumInContentSet'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
      type: object
    exportJobResponse:
      example:
        href: href
        exportID: exportID
      properties:
        exportID:
          type: string
        href:
          type: string
      type: object
    exportResponse:
      example:
        href: href
        exportJobID: exportJobID
      properties:
        exportJobID:
          type: string
        href:
          type: string
      type: object
    myErrataListMock:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - advisoryId: advisoryId
          systems: systems
          publishDate: 2006-01-02T15:04:05.000Z
          affectedSystemCount: 0
          details: details
          synopsis: synopsis
          type: type
        - advisoryId: advisoryId
          systems: systems
          publishDate: 2006-01-02T15:04:05.000Z
          affectedSystemCount: 0
          details: details
          synopsis: synopsis
          type: type
      properties:
        body:
          items:
            $ref: '#/components/schemas/MyErratum'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
      type: object
    ongoingExportJobResponse:
      properties:
        message:
          type: string
      type: object
    pkgContentSetArch:
      example:
        summary: summary
        downloadHref: downloadHref
        release: release
        contentSets:
        - contentSets
        - contentSets
        description: description
        epoch: epoch
        buildDate: 2006-01-02T15:04:05.000Z
        version: version
        buildHost: buildHost
        license: license
        size: 0
        checksum: checksum
        name: name
        arch: arch
        href: href
        group: group
      properties:
        arch:
          type: string
        buildDate:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        buildHost:
          type: string
        checksum:
          type: string
        contentSets:
          items:
            type: string
          type: array
        description:
          type: string
        downloadHref:
          type: string
        epoch:
          type: string
        group:
          type: string
        href:
          type: string
        license:
          type: string
        name:
          type: string
        release:
          type: string
        size:
          type: integer
        summary:
          type: string
        version:
          type: string
      type: object
    pkgDetails:
      example:
        summary: summary
        release: release
        contentSets:
        - contentSets
        - contentSets
        description: description
        epoch: epoch
        buildDate: 2006-01-02T15:04:05.000Z
        version: version
        buildHost: buildHost
        license: license
        size: 0
        checksum: checksum
        name: name
        arch: arch
        href: href
        group: group
      properties:
        arch:
          type: string
        buildDate:
          description: Date represents the date format used for API returns
          example: 2006-01-02T15:04:05.000Z
          type: string
        buildHost:
          type: string
        checksum:
          type: string
        contentSets:
          items:
            type: string
          type: array
        description:
          type: string
        epoch:
          type: string
        group:
          type: string
        href:
          type: string
        license:
          type: string
        name:
          type: string
        release:
          type: string
        size:
          type: integer
        summary:
          type: string
        version:
          type: string
      type: object
    pkgListMock:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - summary: summary
          filename: filename
          release: release
          repoTags:
          - repoTags
          - repoTags
          contentSets:
          - contentSets
          - contentSets
          checksum: checksum
          name: name
          epoch: 0
          arch: arch
          details_url: details_url
          version: version
        - summary: summary
          filename: filename
          release: release
          repoTags:
          - repoTags
          - repoTags
          contentSets:
          - contentSets
          - contentSets
          checksum: checksum
          name: name
          epoch: 0
          arch: arch
          details_url: details_url
          version: version
      properties:
        body:
          items:
            $ref: '#/components/schemas/PackageDetail'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
      type: object
    poolsListMock:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - subscriptionNumber: subscriptionNumber
          endDate: 2006-01-02T15:04:05.000Z
          subscriptionName: subscriptionName
          contractNumber: contractNumber
          entitlementsAvailable: 0
          id: id
          serviceLevel: serviceLevel
          sku: sku
          startDate: 2006-01-02T15:04:05.000Z
        - subscriptionNumber: subscriptionNumber
          endDate: 2006-01-02T15:04:05.000Z
          subscriptionName: subscriptionName
          contractNumber: contractNumber
          entitlementsAvailable: 0
          id: id
          serviceLevel: serviceLevel
          sku: sku
          startDate: 2006-01-02T15:04:05.000Z
      properties:
        body:
          items:
            $ref: '#/components/schemas/PoolDetail'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
      type: object
    systemList:
      description: systemList is a System Slice
      items:
        $ref: '#/components/schemas/System'
      type: array
    systemListMock:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - entitlementCount: 0
          errataCounts:
            enhancementCount: 1
            securityCount: 5
            bugfixCount: 6
          hostname: hostname
          entitlementStatus: entitlementStatus
          name: name
          href: href
          lastCheckin: 2006-01-02T15:04:05.000Z
          type: type
          uuid: uuid
          username: username
        - entitlementCount: 0
          errataCounts:
            enhancementCount: 1
            securityCount: 5
            bugfixCount: 6
          hostname: hostname
          entitlementStatus: entitlementStatus
          name: name
          href: href
          lastCheckin: 2006-01-02T15:04:05.000Z
          type: type
          uuid: uuid
          username: username
      properties:
        body:
          items:
            $ref: '#/components/schemas/System'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
      type: object
    inline_response_200:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - name: name
          entitlementQuantity: 0
          type: type
          uuid: uuid
          version: version
          url: url
        - name: name
          entitlementQuantity: 0
          type: type
          uuid: uuid
          version: version
          url: url
      properties:
        body:
          items:
            $ref: '#/components/schemas/Allocation'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    inline_response_400:
      properties:
        error:
          $ref: '#/components/schemas/ErrorDetails'
    inline_response_200_1:
      example:
        body:
          createdDate: 2006-01-02T15:04:05.000Z
          entitlementsAttachedQuantity: 6
          createdBy: createdBy
          name: name
          entitlementsAttached:
            valid: true
            reason: reason
            value:
            - contractNumber: contractNumber
              id: id
              entitlementQuantity: 0
              sku: sku
            - contractNumber: contractNumber
              id: id
              entitlementQuantity: 0
              sku: sku
          contentAccessMode: contentAccessMode
          lastModified: 2006-01-02T15:04:05.000Z
          type: type
          uuid: uuid
          version: version
      properties:
        body:
          $ref: '#/components/schemas/AllocationDetails'
    inline_response_200_2:
      example:
        body:
          href: href
          exportJobID: exportJobID
      properties:
        body:
          $ref: '#/components/schemas/exportResponse'
    inline_response_200_3:
      example:
        body:
          href: href
          exportID: exportID
      properties:
        body:
          $ref: '#/components/schemas/exportJobResponse'
    inline_response_202:
      properties:
        body:
          $ref: '#/components/schemas/ongoingExportJobResponse'
    inline_response_200_4:
      example:
        body:
        - name: name
          accounts:
          - goldImageStatus: Granted
            nickname: nickname
            id: id
            dateAdded: 2006-01-02T15:04:05.000Z
          - goldImageStatus: Granted
            nickname: nickname
            id: id
            dateAdded: 2006-01-02T15:04:05.000Z
          shortName: shortName
          products:
          - totalQuantity: 6
            nextRenewal: 2006-01-02
            name: name
            enabledQuantity: 0
            sku: sku
            imageGroups:
            - imageGroups
            - imageGroups
          - totalQuantity: 6
            nextRenewal: 2006-01-02
            name: name
            enabledQuantity: 0
            sku: sku
            imageGroups:
            - imageGroups
            - imageGroups
        - name: name
          accounts:
          - goldImageStatus: Granted
            nickname: nickname
            id: id
            dateAdded: 2006-01-02T15:04:05.000Z
          - goldImageStatus: Granted
            nickname: nickname
            id: id
            dateAdded: 2006-01-02T15:04:05.000Z
          shortName: shortName
          products:
          - totalQuantity: 6
            nextRenewal: 2006-01-02
            name: name
            enabledQuantity: 0
            sku: sku
            imageGroups:
            - imageGroups
            - imageGroups
          - totalQuantity: 6
            nextRenewal: 2006-01-02
            name: name
            enabledQuantity: 0
            sku: sku
            imageGroups:
            - imageGroups
            - imageGroups
      properties:
        body:
          items:
            $ref: '#/components/schemas/EnabledCloudAccessProvider'
          type: array
    inline_object:
      properties:
        id:
          type: string
        newID:
          type: string
        newNickname:
          type: string
      type: object
    inline_object_1:
      properties:
        id:
          type: string
      type: object
    inline_object_2:
      properties:
        accounts:
          items:
            type: string
          type: array
        images:
          items:
            type: string
          type: array
      required:
      - accounts
      - images
      type: object
    inline_response_200_5:
      example:
        body:
          severity: severity
          summary: summary
          references:
          - href: href
            id: id
            title: title
            type: type
          - href: href
            id: id
            title: title
            type: type
          typeSeverity: typeSeverity
          affectedProducts:
          - affectedProducts
          - affectedProducts
          description: description
          synopsis: synopsis
          type: type
          cves: cves
          lastUpdated: 2006-01-02T15:04:05.000Z
          bugzillas:
          - href: href
            id: id
            title: title
            type: type
          - href: href
            id: id
            title: title
            type: type
          solution: solution
          copyrightYear: copyrightYear
          id: id
          issued: 2006-01-02T15:04:05.000Z
      properties:
        body:
          $ref: '#/components/schemas/ErratumDetails'
    inline_response_200_6:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - datePublished: 2006-01-02T15:04:05.000Z
          filename: filename
          imageName: imageName
          downloadHref: downloadHref
          checksum: checksum
          arch: arch
        - datePublished: 2006-01-02T15:04:05.000Z
          filename: filename
          imageName: imageName
          downloadHref: downloadHref
          checksum: checksum
          arch: arch
      properties:
        body:
          items:
            $ref: '#/components/schemas/ImageInContentSet'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    inline_response_307:
      properties:
        body:
          $ref: '#/components/schemas/DownloadLink'
    inline_response_200_7:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - summary: summary
          downloadHref: downloadHref
          release: release
          contentSets:
          - contentSets
          - contentSets
          description: description
          epoch: epoch
          buildDate: 2006-01-02T15:04:05.000Z
          version: version
          buildHost: buildHost
          license: license
          size: 0
          checksum: checksum
          name: name
          arch: arch
          href: href
          group: group
        - summary: summary
          downloadHref: downloadHref
          release: release
          contentSets:
          - contentSets
          - contentSets
          description: description
          epoch: epoch
          buildDate: 2006-01-02T15:04:05.000Z
          version: version
          buildHost: buildHost
          license: license
          size: 0
          checksum: checksum
          name: name
          arch: arch
          href: href
          group: group
      properties:
        body:
          items:
            $ref: '#/components/schemas/pkgContentSetArch'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    inline_response_200_8:
      example:
        body:
          summary: summary
          release: release
          contentSets:
          - contentSets
          - contentSets
          description: description
          epoch: epoch
          buildDate: 2006-01-02T15:04:05.000Z
          version: version
          buildHost: buildHost
          license: license
          size: 0
          checksum: checksum
          name: name
          arch: arch
          href: href
          group: group
      properties:
        body:
          $ref: '#/components/schemas/pkgDetails'
    inline_response_200_9:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - quantity: quantity
          subscriptionNumber: subscriptionNumber
          endDate: 2006-01-02T15:04:05.000Z
          subscriptionName: subscriptionName
          contractNumber: contractNumber
          pools:
          - consumed: 0
            quantity: 6
            id: id
            type: type
          - consumed: 0
            quantity: 6
            id: id
            type: type
          sku: sku
          startDate: 2006-01-02T15:04:05.000Z
          status: status
        - quantity: quantity
          subscriptionNumber: subscriptionNumber
          endDate: 2006-01-02T15:04:05.000Z
          subscriptionName: subscriptionName
          contractNumber: contractNumber
          pools:
          - consumed: 0
            quantity: 6
            id: id
            type: type
          - consumed: 0
            quantity: 6
            id: id
            type: type
          sku: sku
          startDate: 2006-01-02T15:04:05.000Z
          status: status
      properties:
        body:
          description: |-
            ListResponse is the actual collection of subscription details that gets
            rendered
          items:
            $ref: '#/components/schemas/DetailResponse'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    inline_response_200_10:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - name: name
          arch: arch
          label: label
          type: type
          enabled: true
        - name: name
          arch: arch
          label: label
          type: type
          enabled: true
      properties:
        body:
          items:
            $ref: '#/components/schemas/ContentSet'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    inline_response_200_11:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - systemName: systemName
          totalEntitlementQuantity: 6
          complianceStatus: complianceStatus
          details: details
          lastCheckin: 2006-01-02T15:04:05.000Z
          entitlementQuantity: 0
          type: type
          uuid: uuid
        - systemName: systemName
          totalEntitlementQuantity: 6
          complianceStatus: complianceStatus
          details: details
          lastCheckin: 2006-01-02T15:04:05.000Z
          entitlementQuantity: 0
          type: type
          uuid: uuid
      properties:
        body:
          items:
            $ref: '#/components/schemas/SystemList'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    inline_response_200_12:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - entitlementCount: 0
          errataCounts:
            enhancementCount: 1
            securityCount: 5
            bugfixCount: 6
          hostname: hostname
          entitlementStatus: entitlementStatus
          name: name
          href: href
          lastCheckin: 2006-01-02T15:04:05.000Z
          type: type
          uuid: uuid
          username: username
        - entitlementCount: 0
          errataCounts:
            enhancementCount: 1
            securityCount: 5
            bugfixCount: 6
          hostname: hostname
          entitlementStatus: entitlementStatus
          name: name
          href: href
          lastCheckin: 2006-01-02T15:04:05.000Z
          type: type
          uuid: uuid
          username: username
      properties:
        body:
          description: systemList is a System Slice
          items:
            $ref: '#/components/schemas/System'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    inline_response_200_13:
      example:
        body:
          entitlementCount: 0
          errataCounts:
            enhancementCount: 1
            securityCount: 5
            bugfixCount: 6
          hostname: hostname
          entitlementStatus: entitlementStatus
          name: name
          href: href
          lastCheckin: 2006-01-02T15:04:05.000Z
          type: type
          uuid: uuid
          username: username
      properties:
        body:
          $ref: '#/components/schemas/System'
    inline_response_200_14:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - severity: severity
          href: href
          id: id
          published: 2006-01-02T15:04:05.000Z
          synopsis: synopsis
          type: type
        - severity: severity
          href: href
          id: id
          published: 2006-01-02T15:04:05.000Z
          synopsis: synopsis
          type: type
      properties:
        body:
          items:
            $ref: '#/components/schemas/ErratumForSystem'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    inline_response_200_15:
      example:
        pagination:
          offset: 5
          count: 6
          limit: 1
        body:
        - advisories:
          - advisory: advisory
            url: url
          - advisory: advisory
            url: url
          errataCount: 6
          release: release
          name: name
          epoch: 0
          arch: arch
          version: version
        - advisories:
          - advisory: advisory
            url: url
          - advisory: advisory
            url: url
          errataCount: 6
          release: release
          name: name
          epoch: 0
          arch: arch
          version: version
      properties:
        body:
          items:
            $ref: '#/components/schemas/PackageForSystem'
          type: array
        pagination:
          $ref: '#/components/schemas/APIPageParam'
    PackageForSystem_advisories:
      example:
        advisory: advisory
        url: url
      properties:
        advisory:
          type: string
        url:
          type: string
  securitySchemes:
    Bearer:
      description: Bearer token for authorized user
      in: header
      name: Authorization
      type: apiKey
