/*
RHSM-API

API for Red Hat Subscription Management

API version: 1.366.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// checks if the UpdatedImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatedImage{}

// UpdatedImage struct for UpdatedImage
type UpdatedImage struct {
	Architecture *string `json:"architecture,omitempty"`
	Digest *string `json:"digest,omitempty"`
	ImagePlusDigest *string `json:"imagePlusDigest,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewUpdatedImage instantiates a new UpdatedImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatedImage() *UpdatedImage {
	this := UpdatedImage{}
	return &this
}

// NewUpdatedImageWithDefaults instantiates a new UpdatedImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatedImageWithDefaults() *UpdatedImage {
	this := UpdatedImage{}
	return &this
}

// GetArchitecture returns the Architecture field value if set, zero value otherwise.
func (o *UpdatedImage) GetArchitecture() string {
	if o == nil || IsNil(o.Architecture) {
		var ret string
		return ret
	}
	return *o.Architecture
}

// GetArchitectureOk returns a tuple with the Architecture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatedImage) GetArchitectureOk() (*string, bool) {
	if o == nil || IsNil(o.Architecture) {
		return nil, false
	}
	return o.Architecture, true
}

// HasArchitecture returns a boolean if a field has been set.
func (o *UpdatedImage) HasArchitecture() bool {
	if o != nil && !IsNil(o.Architecture) {
		return true
	}

	return false
}

// SetArchitecture gets a reference to the given string and assigns it to the Architecture field.
func (o *UpdatedImage) SetArchitecture(v string) {
	o.Architecture = &v
}

// GetDigest returns the Digest field value if set, zero value otherwise.
func (o *UpdatedImage) GetDigest() string {
	if o == nil || IsNil(o.Digest) {
		var ret string
		return ret
	}
	return *o.Digest
}

// GetDigestOk returns a tuple with the Digest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatedImage) GetDigestOk() (*string, bool) {
	if o == nil || IsNil(o.Digest) {
		return nil, false
	}
	return o.Digest, true
}

// HasDigest returns a boolean if a field has been set.
func (o *UpdatedImage) HasDigest() bool {
	if o != nil && !IsNil(o.Digest) {
		return true
	}

	return false
}

// SetDigest gets a reference to the given string and assigns it to the Digest field.
func (o *UpdatedImage) SetDigest(v string) {
	o.Digest = &v
}

// GetImagePlusDigest returns the ImagePlusDigest field value if set, zero value otherwise.
func (o *UpdatedImage) GetImagePlusDigest() string {
	if o == nil || IsNil(o.ImagePlusDigest) {
		var ret string
		return ret
	}
	return *o.ImagePlusDigest
}

// GetImagePlusDigestOk returns a tuple with the ImagePlusDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatedImage) GetImagePlusDigestOk() (*string, bool) {
	if o == nil || IsNil(o.ImagePlusDigest) {
		return nil, false
	}
	return o.ImagePlusDigest, true
}

// HasImagePlusDigest returns a boolean if a field has been set.
func (o *UpdatedImage) HasImagePlusDigest() bool {
	if o != nil && !IsNil(o.ImagePlusDigest) {
		return true
	}

	return false
}

// SetImagePlusDigest gets a reference to the given string and assigns it to the ImagePlusDigest field.
func (o *UpdatedImage) SetImagePlusDigest(v string) {
	o.ImagePlusDigest = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdatedImage) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatedImage) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdatedImage) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdatedImage) SetName(v string) {
	o.Name = &v
}

func (o UpdatedImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatedImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Architecture) {
		toSerialize["architecture"] = o.Architecture
	}
	if !IsNil(o.Digest) {
		toSerialize["digest"] = o.Digest
	}
	if !IsNil(o.ImagePlusDigest) {
		toSerialize["imagePlusDigest"] = o.ImagePlusDigest
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableUpdatedImage struct {
	value *UpdatedImage
	isSet bool
}

func (v NullableUpdatedImage) Get() *UpdatedImage {
	return v.value
}

func (v *NullableUpdatedImage) Set(val *UpdatedImage) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatedImage) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatedImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatedImage(val *UpdatedImage) *NullableUpdatedImage {
	return &NullableUpdatedImage{value: val, isSet: true}
}

func (v NullableUpdatedImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatedImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


