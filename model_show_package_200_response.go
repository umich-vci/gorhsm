/*
RHSM-API

API for Red Hat Subscription Management

API version: 1.300.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// ShowPackage200Response struct for ShowPackage200Response
type ShowPackage200Response struct {
	Body *PkgDetails `json:"body,omitempty"`
}

// NewShowPackage200Response instantiates a new ShowPackage200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShowPackage200Response() *ShowPackage200Response {
	this := ShowPackage200Response{}
	return &this
}

// NewShowPackage200ResponseWithDefaults instantiates a new ShowPackage200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShowPackage200ResponseWithDefaults() *ShowPackage200Response {
	this := ShowPackage200Response{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *ShowPackage200Response) GetBody() PkgDetails {
	if o == nil || o.Body == nil {
		var ret PkgDetails
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShowPackage200Response) GetBodyOk() (*PkgDetails, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *ShowPackage200Response) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given PkgDetails and assigns it to the Body field.
func (o *ShowPackage200Response) SetBody(v PkgDetails) {
	o.Body = &v
}

func (o ShowPackage200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	return json.Marshal(toSerialize)
}

type NullableShowPackage200Response struct {
	value *ShowPackage200Response
	isSet bool
}

func (v NullableShowPackage200Response) Get() *ShowPackage200Response {
	return v.value
}

func (v *NullableShowPackage200Response) Set(val *ShowPackage200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableShowPackage200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableShowPackage200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShowPackage200Response(val *ShowPackage200Response) *NullableShowPackage200Response {
	return &NullableShowPackage200Response{value: val, isSet: true}
}

func (v NullableShowPackage200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShowPackage200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
