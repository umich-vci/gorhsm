/*
RHSM-API

Testing CloudaccessApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package gorhsm

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/umich-vci/gorhsm"
)

func Test_gorhsm_CloudaccessApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CloudaccessApiService AddProviderAccounts", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var providerShortName string

		httpRes, err := apiClient.CloudaccessApi.AddProviderAccounts(context.Background(), providerShortName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CloudaccessApiService EnableGoldImages", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var providerShortName string

		httpRes, err := apiClient.CloudaccessApi.EnableGoldImages(context.Background(), providerShortName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CloudaccessApiService ListEnabledCloudAccessProviders", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CloudaccessApi.ListEnabledCloudAccessProviders(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CloudaccessApiService RemoveProviderAccount", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var providerShortName string

		httpRes, err := apiClient.CloudaccessApi.RemoveProviderAccount(context.Background(), providerShortName).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CloudaccessApiService UpdateProviderAccount", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var providerShortName string
		var accountID string

		httpRes, err := apiClient.CloudaccessApi.UpdateProviderAccount(context.Background(), providerShortName, accountID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CloudaccessApiService VerifyProviderAccount", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var providerShortName string
		var accountID string

		httpRes, err := apiClient.CloudaccessApi.VerifyProviderAccount(context.Background(), providerShortName, accountID).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
