/*
RHSM-API

API for Red Hat Subscription Management

API version: 1.366.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnableGoldImagesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnableGoldImagesRequest{}

// EnableGoldImagesRequest struct for EnableGoldImagesRequest
type EnableGoldImagesRequest struct {
	Accounts []string `json:"accounts"`
	Images []string `json:"images"`
}

type _EnableGoldImagesRequest EnableGoldImagesRequest

// NewEnableGoldImagesRequest instantiates a new EnableGoldImagesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableGoldImagesRequest(accounts []string, images []string) *EnableGoldImagesRequest {
	this := EnableGoldImagesRequest{}
	this.Accounts = accounts
	this.Images = images
	return &this
}

// NewEnableGoldImagesRequestWithDefaults instantiates a new EnableGoldImagesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnableGoldImagesRequestWithDefaults() *EnableGoldImagesRequest {
	this := EnableGoldImagesRequest{}
	return &this
}

// GetAccounts returns the Accounts field value
func (o *EnableGoldImagesRequest) GetAccounts() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Accounts
}

// GetAccountsOk returns a tuple with the Accounts field value
// and a boolean to check if the value has been set.
func (o *EnableGoldImagesRequest) GetAccountsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Accounts, true
}

// SetAccounts sets field value
func (o *EnableGoldImagesRequest) SetAccounts(v []string) {
	o.Accounts = v
}

// GetImages returns the Images field value
func (o *EnableGoldImagesRequest) GetImages() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *EnableGoldImagesRequest) GetImagesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *EnableGoldImagesRequest) SetImages(v []string) {
	o.Images = v
}

func (o EnableGoldImagesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnableGoldImagesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accounts"] = o.Accounts
	toSerialize["images"] = o.Images
	return toSerialize, nil
}

func (o *EnableGoldImagesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accounts",
		"images",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnableGoldImagesRequest := _EnableGoldImagesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnableGoldImagesRequest)

	if err != nil {
		return err
	}

	*o = EnableGoldImagesRequest(varEnableGoldImagesRequest)

	return err
}

type NullableEnableGoldImagesRequest struct {
	value *EnableGoldImagesRequest
	isSet bool
}

func (v NullableEnableGoldImagesRequest) Get() *EnableGoldImagesRequest {
	return v.value
}

func (v *NullableEnableGoldImagesRequest) Set(val *EnableGoldImagesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnableGoldImagesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnableGoldImagesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnableGoldImagesRequest(val *EnableGoldImagesRequest) *NullableEnableGoldImagesRequest {
	return &NullableEnableGoldImagesRequest{value: val, isSet: true}
}

func (v NullableEnableGoldImagesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnableGoldImagesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


