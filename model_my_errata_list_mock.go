/*
RHSM-API

API for Red Hat Subscription Management

API version: 1.264.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// MyErrataListMock struct for MyErrataListMock
type MyErrataListMock struct {
	Body       []MyErratum   `json:"body,omitempty"`
	Pagination *APIPageParam `json:"pagination,omitempty"`
}

// NewMyErrataListMock instantiates a new MyErrataListMock object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMyErrataListMock() *MyErrataListMock {
	this := MyErrataListMock{}
	return &this
}

// NewMyErrataListMockWithDefaults instantiates a new MyErrataListMock object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMyErrataListMockWithDefaults() *MyErrataListMock {
	this := MyErrataListMock{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *MyErrataListMock) GetBody() []MyErratum {
	if o == nil || o.Body == nil {
		var ret []MyErratum
		return ret
	}
	return o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyErrataListMock) GetBodyOk() ([]MyErratum, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *MyErrataListMock) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given []MyErratum and assigns it to the Body field.
func (o *MyErrataListMock) SetBody(v []MyErratum) {
	o.Body = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *MyErrataListMock) GetPagination() APIPageParam {
	if o == nil || o.Pagination == nil {
		var ret APIPageParam
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MyErrataListMock) GetPaginationOk() (*APIPageParam, bool) {
	if o == nil || o.Pagination == nil {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *MyErrataListMock) HasPagination() bool {
	if o != nil && o.Pagination != nil {
		return true
	}

	return false
}

// SetPagination gets a reference to the given APIPageParam and assigns it to the Pagination field.
func (o *MyErrataListMock) SetPagination(v APIPageParam) {
	o.Pagination = &v
}

func (o MyErrataListMock) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.Pagination != nil {
		toSerialize["pagination"] = o.Pagination
	}
	return json.Marshal(toSerialize)
}

type NullableMyErrataListMock struct {
	value *MyErrataListMock
	isSet bool
}

func (v NullableMyErrataListMock) Get() *MyErrataListMock {
	return v.value
}

func (v *NullableMyErrataListMock) Set(val *MyErrataListMock) {
	v.value = val
	v.isSet = true
}

func (v NullableMyErrataListMock) IsSet() bool {
	return v.isSet
}

func (v *NullableMyErrataListMock) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMyErrataListMock(val *MyErrataListMock) *NullableMyErrataListMock {
	return &NullableMyErrataListMock{value: val, isSet: true}
}

func (v NullableMyErrataListMock) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMyErrataListMock) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
