/*
RHSM-API

API for Red Hat Subscription Management

API version: 1.300.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// AllocationSummary details of a subscription allocation
type AllocationSummary struct {
	ContentAccessMode *string `json:"contentAccessMode,omitempty"`
	CreatedBy         *string `json:"createdBy,omitempty"`
	// Date represents the date format used for API returns
	CreatedDate                  *string `json:"createdDate,omitempty"`
	EntitlementsAttachedQuantity *int32  `json:"entitlementsAttachedQuantity,omitempty"`
	// Date represents the date format used for API returns
	LastModified *string `json:"lastModified,omitempty"`
	Name         *string `json:"name,omitempty"`
	Type         *string `json:"type,omitempty"`
	Uuid         *string `json:"uuid,omitempty"`
	Version      *string `json:"version,omitempty"`
}

// NewAllocationSummary instantiates a new AllocationSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocationSummary() *AllocationSummary {
	this := AllocationSummary{}
	return &this
}

// NewAllocationSummaryWithDefaults instantiates a new AllocationSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocationSummaryWithDefaults() *AllocationSummary {
	this := AllocationSummary{}
	return &this
}

// GetContentAccessMode returns the ContentAccessMode field value if set, zero value otherwise.
func (o *AllocationSummary) GetContentAccessMode() string {
	if o == nil || o.ContentAccessMode == nil {
		var ret string
		return ret
	}
	return *o.ContentAccessMode
}

// GetContentAccessModeOk returns a tuple with the ContentAccessMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationSummary) GetContentAccessModeOk() (*string, bool) {
	if o == nil || o.ContentAccessMode == nil {
		return nil, false
	}
	return o.ContentAccessMode, true
}

// HasContentAccessMode returns a boolean if a field has been set.
func (o *AllocationSummary) HasContentAccessMode() bool {
	if o != nil && o.ContentAccessMode != nil {
		return true
	}

	return false
}

// SetContentAccessMode gets a reference to the given string and assigns it to the ContentAccessMode field.
func (o *AllocationSummary) SetContentAccessMode(v string) {
	o.ContentAccessMode = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *AllocationSummary) GetCreatedBy() string {
	if o == nil || o.CreatedBy == nil {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationSummary) GetCreatedByOk() (*string, bool) {
	if o == nil || o.CreatedBy == nil {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *AllocationSummary) HasCreatedBy() bool {
	if o != nil && o.CreatedBy != nil {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *AllocationSummary) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *AllocationSummary) GetCreatedDate() string {
	if o == nil || o.CreatedDate == nil {
		var ret string
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationSummary) GetCreatedDateOk() (*string, bool) {
	if o == nil || o.CreatedDate == nil {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *AllocationSummary) HasCreatedDate() bool {
	if o != nil && o.CreatedDate != nil {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given string and assigns it to the CreatedDate field.
func (o *AllocationSummary) SetCreatedDate(v string) {
	o.CreatedDate = &v
}

// GetEntitlementsAttachedQuantity returns the EntitlementsAttachedQuantity field value if set, zero value otherwise.
func (o *AllocationSummary) GetEntitlementsAttachedQuantity() int32 {
	if o == nil || o.EntitlementsAttachedQuantity == nil {
		var ret int32
		return ret
	}
	return *o.EntitlementsAttachedQuantity
}

// GetEntitlementsAttachedQuantityOk returns a tuple with the EntitlementsAttachedQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationSummary) GetEntitlementsAttachedQuantityOk() (*int32, bool) {
	if o == nil || o.EntitlementsAttachedQuantity == nil {
		return nil, false
	}
	return o.EntitlementsAttachedQuantity, true
}

// HasEntitlementsAttachedQuantity returns a boolean if a field has been set.
func (o *AllocationSummary) HasEntitlementsAttachedQuantity() bool {
	if o != nil && o.EntitlementsAttachedQuantity != nil {
		return true
	}

	return false
}

// SetEntitlementsAttachedQuantity gets a reference to the given int32 and assigns it to the EntitlementsAttachedQuantity field.
func (o *AllocationSummary) SetEntitlementsAttachedQuantity(v int32) {
	o.EntitlementsAttachedQuantity = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *AllocationSummary) GetLastModified() string {
	if o == nil || o.LastModified == nil {
		var ret string
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationSummary) GetLastModifiedOk() (*string, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *AllocationSummary) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given string and assigns it to the LastModified field.
func (o *AllocationSummary) SetLastModified(v string) {
	o.LastModified = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AllocationSummary) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationSummary) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AllocationSummary) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AllocationSummary) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AllocationSummary) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationSummary) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AllocationSummary) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AllocationSummary) SetType(v string) {
	o.Type = &v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *AllocationSummary) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationSummary) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *AllocationSummary) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *AllocationSummary) SetUuid(v string) {
	o.Uuid = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *AllocationSummary) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationSummary) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *AllocationSummary) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *AllocationSummary) SetVersion(v string) {
	o.Version = &v
}

func (o AllocationSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ContentAccessMode != nil {
		toSerialize["contentAccessMode"] = o.ContentAccessMode
	}
	if o.CreatedBy != nil {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if o.CreatedDate != nil {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if o.EntitlementsAttachedQuantity != nil {
		toSerialize["entitlementsAttachedQuantity"] = o.EntitlementsAttachedQuantity
	}
	if o.LastModified != nil {
		toSerialize["lastModified"] = o.LastModified
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableAllocationSummary struct {
	value *AllocationSummary
	isSet bool
}

func (v NullableAllocationSummary) Get() *AllocationSummary {
	return v.value
}

func (v *NullableAllocationSummary) Set(val *AllocationSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocationSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocationSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocationSummary(val *AllocationSummary) *NullableAllocationSummary {
	return &NullableAllocationSummary{value: val, isSet: true}
}

func (v NullableAllocationSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocationSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
