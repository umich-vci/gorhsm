/*
RHSM-API

API for Red Hat Subscription Management

API version: 1.300.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// ExportJobResponse struct for ExportJobResponse
type ExportJobResponse struct {
	ExportID *string `json:"exportID,omitempty"`
	Href     *string `json:"href,omitempty"`
}

// NewExportJobResponse instantiates a new ExportJobResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportJobResponse() *ExportJobResponse {
	this := ExportJobResponse{}
	return &this
}

// NewExportJobResponseWithDefaults instantiates a new ExportJobResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportJobResponseWithDefaults() *ExportJobResponse {
	this := ExportJobResponse{}
	return &this
}

// GetExportID returns the ExportID field value if set, zero value otherwise.
func (o *ExportJobResponse) GetExportID() string {
	if o == nil || o.ExportID == nil {
		var ret string
		return ret
	}
	return *o.ExportID
}

// GetExportIDOk returns a tuple with the ExportID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportJobResponse) GetExportIDOk() (*string, bool) {
	if o == nil || o.ExportID == nil {
		return nil, false
	}
	return o.ExportID, true
}

// HasExportID returns a boolean if a field has been set.
func (o *ExportJobResponse) HasExportID() bool {
	if o != nil && o.ExportID != nil {
		return true
	}

	return false
}

// SetExportID gets a reference to the given string and assigns it to the ExportID field.
func (o *ExportJobResponse) SetExportID(v string) {
	o.ExportID = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ExportJobResponse) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportJobResponse) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ExportJobResponse) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ExportJobResponse) SetHref(v string) {
	o.Href = &v
}

func (o ExportJobResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExportID != nil {
		toSerialize["exportID"] = o.ExportID
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	return json.Marshal(toSerialize)
}

type NullableExportJobResponse struct {
	value *ExportJobResponse
	isSet bool
}

func (v NullableExportJobResponse) Get() *ExportJobResponse {
	return v.value
}

func (v *NullableExportJobResponse) Set(val *ExportJobResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableExportJobResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableExportJobResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportJobResponse(val *ExportJobResponse) *NullableExportJobResponse {
	return &NullableExportJobResponse{value: val, isSet: true}
}

func (v NullableExportJobResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportJobResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
