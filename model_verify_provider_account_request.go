/*
RHSM-API

API for Red Hat Subscription Management

API version: 1.313.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// checks if the VerifyProviderAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyProviderAccountRequest{}

// VerifyProviderAccountRequest struct for VerifyProviderAccountRequest
type VerifyProviderAccountRequest struct {
	// base64-encoded cloud instance metadata. For GCE, please use the instance identity token (JWT) as it is.
	Identity string `json:"identity"`
	// base64-encoded cloud instance metadata signature. For GCE, please omit this field.
	Signature string `json:"signature"`
}

// NewVerifyProviderAccountRequest instantiates a new VerifyProviderAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyProviderAccountRequest(identity string, signature string) *VerifyProviderAccountRequest {
	this := VerifyProviderAccountRequest{}
	this.Identity = identity
	this.Signature = signature
	return &this
}

// NewVerifyProviderAccountRequestWithDefaults instantiates a new VerifyProviderAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyProviderAccountRequestWithDefaults() *VerifyProviderAccountRequest {
	this := VerifyProviderAccountRequest{}
	return &this
}

// GetIdentity returns the Identity field value
func (o *VerifyProviderAccountRequest) GetIdentity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value
// and a boolean to check if the value has been set.
func (o *VerifyProviderAccountRequest) GetIdentityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identity, true
}

// SetIdentity sets field value
func (o *VerifyProviderAccountRequest) SetIdentity(v string) {
	o.Identity = v
}

// GetSignature returns the Signature field value
func (o *VerifyProviderAccountRequest) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *VerifyProviderAccountRequest) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *VerifyProviderAccountRequest) SetSignature(v string) {
	o.Signature = v
}

func (o VerifyProviderAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyProviderAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identity"] = o.Identity
	toSerialize["signature"] = o.Signature
	return toSerialize, nil
}

type NullableVerifyProviderAccountRequest struct {
	value *VerifyProviderAccountRequest
	isSet bool
}

func (v NullableVerifyProviderAccountRequest) Get() *VerifyProviderAccountRequest {
	return v.value
}

func (v *NullableVerifyProviderAccountRequest) Set(val *VerifyProviderAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyProviderAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyProviderAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyProviderAccountRequest(val *VerifyProviderAccountRequest) *NullableVerifyProviderAccountRequest {
	return &NullableVerifyProviderAccountRequest{value: val, isSet: true}
}

func (v NullableVerifyProviderAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyProviderAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


