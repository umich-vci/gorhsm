/*
 * RHSM-API
 *
 * API for Red Hat Subscription Management
 *
 * API version: 1.182.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// AddProviderAccount An account to be added
type AddProviderAccount struct {
	Id       *string `json:"id,omitempty"`
	Nickname *string `json:"nickname,omitempty"`
}

// NewAddProviderAccount instantiates a new AddProviderAccount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddProviderAccount() *AddProviderAccount {
	this := AddProviderAccount{}
	return &this
}

// NewAddProviderAccountWithDefaults instantiates a new AddProviderAccount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddProviderAccountWithDefaults() *AddProviderAccount {
	this := AddProviderAccount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AddProviderAccount) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProviderAccount) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AddProviderAccount) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AddProviderAccount) SetId(v string) {
	o.Id = &v
}

// GetNickname returns the Nickname field value if set, zero value otherwise.
func (o *AddProviderAccount) GetNickname() string {
	if o == nil || o.Nickname == nil {
		var ret string
		return ret
	}
	return *o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddProviderAccount) GetNicknameOk() (*string, bool) {
	if o == nil || o.Nickname == nil {
		return nil, false
	}
	return o.Nickname, true
}

// HasNickname returns a boolean if a field has been set.
func (o *AddProviderAccount) HasNickname() bool {
	if o != nil && o.Nickname != nil {
		return true
	}

	return false
}

// SetNickname gets a reference to the given string and assigns it to the Nickname field.
func (o *AddProviderAccount) SetNickname(v string) {
	o.Nickname = &v
}

func (o AddProviderAccount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Nickname != nil {
		toSerialize["nickname"] = o.Nickname
	}
	return json.Marshal(toSerialize)
}

type NullableAddProviderAccount struct {
	value *AddProviderAccount
	isSet bool
}

func (v NullableAddProviderAccount) Get() *AddProviderAccount {
	return v.value
}

func (v *NullableAddProviderAccount) Set(val *AddProviderAccount) {
	v.value = val
	v.isSet = true
}

func (v NullableAddProviderAccount) IsSet() bool {
	return v.isSet
}

func (v *NullableAddProviderAccount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddProviderAccount(val *AddProviderAccount) *NullableAddProviderAccount {
	return &NullableAddProviderAccount{value: val, isSet: true}
}

func (v NullableAddProviderAccount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddProviderAccount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
