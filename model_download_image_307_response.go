/*
RHSM-API

API for Red Hat Subscription Management

API version: 1.300.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// DownloadImage307Response struct for DownloadImage307Response
type DownloadImage307Response struct {
	Body *DownloadLink `json:"body,omitempty"`
}

// NewDownloadImage307Response instantiates a new DownloadImage307Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadImage307Response() *DownloadImage307Response {
	this := DownloadImage307Response{}
	return &this
}

// NewDownloadImage307ResponseWithDefaults instantiates a new DownloadImage307Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadImage307ResponseWithDefaults() *DownloadImage307Response {
	this := DownloadImage307Response{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *DownloadImage307Response) GetBody() DownloadLink {
	if o == nil || o.Body == nil {
		var ret DownloadLink
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadImage307Response) GetBodyOk() (*DownloadLink, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *DownloadImage307Response) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given DownloadLink and assigns it to the Body field.
func (o *DownloadImage307Response) SetBody(v DownloadLink) {
	o.Body = &v
}

func (o DownloadImage307Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	return json.Marshal(toSerialize)
}

type NullableDownloadImage307Response struct {
	value *DownloadImage307Response
	isSet bool
}

func (v NullableDownloadImage307Response) Get() *DownloadImage307Response {
	return v.value
}

func (v *NullableDownloadImage307Response) Set(val *DownloadImage307Response) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadImage307Response) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadImage307Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadImage307Response(val *DownloadImage307Response) *NullableDownloadImage307Response {
	return &NullableDownloadImage307Response{value: val, isSet: true}
}

func (v NullableDownloadImage307Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadImage307Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
