/*
RHSM-API

API for Red Hat Subscription Management

API version: 1.300.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gorhsm

import (
	"encoding/json"
)

// OrgSimpleContentAccess struct for OrgSimpleContentAccess
type OrgSimpleContentAccess struct {
	Id                         *string                  `json:"id,omitempty"`
	SimpleContentAccess        *string                  `json:"simpleContentAccess,omitempty"`
	SimpleContentAccessCapable *bool                    `json:"simpleContentAccessCapable,omitempty"`
	SystemPurposeAttributes    *SystemPurposeAttributes `json:"systemPurposeAttributes,omitempty"`
}

// NewOrgSimpleContentAccess instantiates a new OrgSimpleContentAccess object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgSimpleContentAccess() *OrgSimpleContentAccess {
	this := OrgSimpleContentAccess{}
	return &this
}

// NewOrgSimpleContentAccessWithDefaults instantiates a new OrgSimpleContentAccess object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgSimpleContentAccessWithDefaults() *OrgSimpleContentAccess {
	this := OrgSimpleContentAccess{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrgSimpleContentAccess) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSimpleContentAccess) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrgSimpleContentAccess) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrgSimpleContentAccess) SetId(v string) {
	o.Id = &v
}

// GetSimpleContentAccess returns the SimpleContentAccess field value if set, zero value otherwise.
func (o *OrgSimpleContentAccess) GetSimpleContentAccess() string {
	if o == nil || o.SimpleContentAccess == nil {
		var ret string
		return ret
	}
	return *o.SimpleContentAccess
}

// GetSimpleContentAccessOk returns a tuple with the SimpleContentAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSimpleContentAccess) GetSimpleContentAccessOk() (*string, bool) {
	if o == nil || o.SimpleContentAccess == nil {
		return nil, false
	}
	return o.SimpleContentAccess, true
}

// HasSimpleContentAccess returns a boolean if a field has been set.
func (o *OrgSimpleContentAccess) HasSimpleContentAccess() bool {
	if o != nil && o.SimpleContentAccess != nil {
		return true
	}

	return false
}

// SetSimpleContentAccess gets a reference to the given string and assigns it to the SimpleContentAccess field.
func (o *OrgSimpleContentAccess) SetSimpleContentAccess(v string) {
	o.SimpleContentAccess = &v
}

// GetSimpleContentAccessCapable returns the SimpleContentAccessCapable field value if set, zero value otherwise.
func (o *OrgSimpleContentAccess) GetSimpleContentAccessCapable() bool {
	if o == nil || o.SimpleContentAccessCapable == nil {
		var ret bool
		return ret
	}
	return *o.SimpleContentAccessCapable
}

// GetSimpleContentAccessCapableOk returns a tuple with the SimpleContentAccessCapable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSimpleContentAccess) GetSimpleContentAccessCapableOk() (*bool, bool) {
	if o == nil || o.SimpleContentAccessCapable == nil {
		return nil, false
	}
	return o.SimpleContentAccessCapable, true
}

// HasSimpleContentAccessCapable returns a boolean if a field has been set.
func (o *OrgSimpleContentAccess) HasSimpleContentAccessCapable() bool {
	if o != nil && o.SimpleContentAccessCapable != nil {
		return true
	}

	return false
}

// SetSimpleContentAccessCapable gets a reference to the given bool and assigns it to the SimpleContentAccessCapable field.
func (o *OrgSimpleContentAccess) SetSimpleContentAccessCapable(v bool) {
	o.SimpleContentAccessCapable = &v
}

// GetSystemPurposeAttributes returns the SystemPurposeAttributes field value if set, zero value otherwise.
func (o *OrgSimpleContentAccess) GetSystemPurposeAttributes() SystemPurposeAttributes {
	if o == nil || o.SystemPurposeAttributes == nil {
		var ret SystemPurposeAttributes
		return ret
	}
	return *o.SystemPurposeAttributes
}

// GetSystemPurposeAttributesOk returns a tuple with the SystemPurposeAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgSimpleContentAccess) GetSystemPurposeAttributesOk() (*SystemPurposeAttributes, bool) {
	if o == nil || o.SystemPurposeAttributes == nil {
		return nil, false
	}
	return o.SystemPurposeAttributes, true
}

// HasSystemPurposeAttributes returns a boolean if a field has been set.
func (o *OrgSimpleContentAccess) HasSystemPurposeAttributes() bool {
	if o != nil && o.SystemPurposeAttributes != nil {
		return true
	}

	return false
}

// SetSystemPurposeAttributes gets a reference to the given SystemPurposeAttributes and assigns it to the SystemPurposeAttributes field.
func (o *OrgSimpleContentAccess) SetSystemPurposeAttributes(v SystemPurposeAttributes) {
	o.SystemPurposeAttributes = &v
}

func (o OrgSimpleContentAccess) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SimpleContentAccess != nil {
		toSerialize["simpleContentAccess"] = o.SimpleContentAccess
	}
	if o.SimpleContentAccessCapable != nil {
		toSerialize["simpleContentAccessCapable"] = o.SimpleContentAccessCapable
	}
	if o.SystemPurposeAttributes != nil {
		toSerialize["systemPurposeAttributes"] = o.SystemPurposeAttributes
	}
	return json.Marshal(toSerialize)
}

type NullableOrgSimpleContentAccess struct {
	value *OrgSimpleContentAccess
	isSet bool
}

func (v NullableOrgSimpleContentAccess) Get() *OrgSimpleContentAccess {
	return v.value
}

func (v *NullableOrgSimpleContentAccess) Set(val *OrgSimpleContentAccess) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgSimpleContentAccess) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgSimpleContentAccess) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgSimpleContentAccess(val *OrgSimpleContentAccess) *NullableOrgSimpleContentAccess {
	return &NullableOrgSimpleContentAccess{value: val, isSet: true}
}

func (v NullableOrgSimpleContentAccess) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgSimpleContentAccess) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
